{\rtf1\ansi\ansicpg936\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 //
\f1 \'bf\'ec\'b6\'c1\'c4\'a3\'b0\'e5
\f0 1
\f1 \'a3\'ba\'b8\'fc\'bf\'ec\'a3\'ac\'b5\'ab\'c3\'bb\'d3\'d0
\f0 next()
\f1 \'d3\'c3\'d3\'da\'b6\'c1\'d7\'d6\'b7\'fb\'b4\'ae
\f0 \
\
import java.io.*;\
import java.util.*;\
\
public class Main \{\
\
	public static void main(String[] args) throws IOException \{\
		Reader in=new Reader();\
		PrintWriter out=new PrintWriter(System.out);\
		\
		\
		\
		out.close();\
	\}\
	\
\
	static class Reader\
	\{\
		final private int BUFFER_SIZE = 1 << 16;\
		private DataInputStream din;\
		private byte[] buffer;\
		private int bufferPointer, bytesRead;\
 \
		public Reader()\
		\{\
			din = new DataInputStream(System.in);\
			buffer = new byte[BUFFER_SIZE];\
			bufferPointer = bytesRead = 0;\
		\}\
 \
		public Reader(String file_name) throws IOException\
		\{\
			din = new DataInputStream(new FileInputStream(file_name));\
			buffer = new byte[BUFFER_SIZE];\
			bufferPointer = bytesRead = 0;\
		\}\
 \
		public String readLine() throws IOException\
		\{\
			byte[] buf = new byte[64]; // line length\
			int cnt = 0, c;\
			while ((c = read()) != -1)\
			\{\
				if (c == '\\n')\
					break;\
				buf[cnt++] = (byte) c;\
			\}\
			return new String(buf, 0, cnt);\
		\}\
 \
		public int nextInt() throws IOException\
		\{\
			int ret = 0;\
			byte c = read();\
			while (c <= ' ')\
				c = read();\
			boolean neg = (c == '-');\
			if (neg)\
				c = read();\
			do\
			\{\
				ret = ret * 10 + c - '0';\
			\}  while ((c = read()) >= '0' && c <= '9');\
 \
			if (neg)\
				return -ret;\
			return ret;\
		\}\
 \
		public long nextLong() throws IOException\
		\{\
			long ret = 0;\
			byte c = read();\
			while (c <= ' ')\
				c = read();\
			boolean neg = (c == '-');\
			if (neg)\
				c = read();\
			do \{\
				ret = ret * 10 + c - '0';\
			\}\
			while ((c = read()) >= '0' && c <= '9');\
			if (neg)\
				return -ret;\
			return ret;\
		\}\
 \
		public double nextDouble() throws IOException\
		\{\
			double ret = 0, div = 1;\
			byte c = read();\
			while (c <= ' ')\
				c = read();\
			boolean neg = (c == '-');\
			if (neg)\
				c = read();\
 \
			do \{\
				ret = ret * 10 + c - '0';\
			\}\
			while ((c = read()) >= '0' && c <= '9');\
 \
			if (c == '.')\
			\{\
				while ((c = read()) >= '0' && c <= '9')\
				\{\
					ret += (c - '0') / (div *= 10);\
				\}\
			\}\
 \
			if (neg)\
				return -ret;\
			return ret;\
		\}\
 \
		private void fillBuffer() throws IOException\
		\{\
			bytesRead = din.read(buffer, bufferPointer = 0, BUFFER_SIZE);\
			if (bytesRead == -1)\
				buffer[0] = -1;\
		\}\
 \
		private byte read() throws IOException\
		\{\
			if (bufferPointer == bytesRead)\
				fillBuffer();\
			return buffer[bufferPointer++];\
		\}\
 \
		public void close() throws IOException\
		\{\
			if (din == null)\
				return;\
			din.close();\
		\}\
	\}\
\
\}}